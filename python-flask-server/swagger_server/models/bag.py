# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Bag(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, bag_id: str=None, bag_weight: int=None):  # noqa: E501
        """Bag - a model defined in Swagger

        :param bag_id: The bag_id of this Bag.  # noqa: E501
        :type bag_id: str
        :param bag_weight: The bag_weight of this Bag.  # noqa: E501
        :type bag_weight: int
        """
        self.swagger_types = {
            'bag_id': str,
            'bag_weight': int
        }

        self.attribute_map = {
            'bag_id': 'bagId',
            'bag_weight': 'bagWeight'
        }

        self._bag_id = bag_id
        self._bag_weight = bag_weight

    @classmethod
    def from_dict(cls, dikt) -> 'Bag':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Bag of this Bag.  # noqa: E501
        :rtype: Bag
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bag_id(self) -> str:
        """Gets the bag_id of this Bag.


        :return: The bag_id of this Bag.
        :rtype: str
        """
        return self._bag_id

    @bag_id.setter
    def bag_id(self, bag_id: str):
        """Sets the bag_id of this Bag.


        :param bag_id: The bag_id of this Bag.
        :type bag_id: str
        """

        self._bag_id = bag_id

    @property
    def bag_weight(self) -> int:
        """Gets the bag_weight of this Bag.


        :return: The bag_weight of this Bag.
        :rtype: int
        """
        return self._bag_weight

    @bag_weight.setter
    def bag_weight(self, bag_weight: int):
        """Sets the bag_weight of this Bag.


        :param bag_weight: The bag_weight of this Bag.
        :type bag_weight: int
        """

        self._bag_weight = bag_weight
